package net.malware.retooled.datagen;

import net.fabricmc.fabric.api.datagen.v1.FabricDataOutput;
import net.fabricmc.fabric.api.datagen.v1.provider.FabricRecipeProvider;
import net.malware.retooled.item.RetooledItems;
import net.minecraft.data.server.recipe.RecipeJsonProvider;
import net.minecraft.data.server.recipe.ShapedRecipeJsonBuilder;
import net.minecraft.item.Items;
import net.minecraft.recipe.book.RecipeCategory;
import net.minecraft.util.Identifier;

import java.util.function.Consumer;

public class RetooledRecipeProvider extends FabricRecipeProvider {
    public RetooledRecipeProvider(FabricDataOutput output) {super(output);}
    public void generate(Consumer<RecipeJsonProvider> consumer) {

        ShapedRecipeJsonBuilder.create(RecipeCategory.MISC, Items.RAIL, 1)
                .pattern("c c")
                .pattern("c|c")
                .pattern("c c")
                .input('c', Items.COPPER_INGOT)
                .input('|', Items.STICK)
                .criterion(hasItem(Items.COPPER_INGOT), conditionsFromItem(Items.COPPER_INGOT))
                .criterion(hasItem(Items.STICK), conditionsFromItem(Items.STICK))
                .offerTo(consumer, new Identifier(getRecipeName(Items.RAIL)));

        ShapedRecipeJsonBuilder.create(RecipeCategory.MISC, Items.ACTIVATOR_RAIL, 1)
                .pattern("c|c")
                .pattern("crc")
                .pattern("c|c")
                .input('c', Items.COPPER_INGOT)
                .input('|', Items.STICK)
                .input('r', Items.REDSTONE_TORCH)
                .criterion(hasItem(Items.COPPER_INGOT), conditionsFromItem(Items.COPPER_INGOT))
                .criterion(hasItem(Items.STONE_PRESSURE_PLATE), conditionsFromItem(Items.STONE_PRESSURE_PLATE))
                .criterion(hasItem(Items.REDSTONE), conditionsFromItem(Items.REDSTONE))
                .offerTo(consumer, new Identifier(getRecipeName(Items.ACTIVATOR_RAIL)));

        ShapedRecipeJsonBuilder.create(RecipeCategory.MISC, Items.DETECTOR_RAIL, 1)
                .pattern("c c")
                .pattern("csc")
                .pattern("crc")
                .input('c', Items.COPPER_INGOT)
                .input('s', Items.STONE_PRESSURE_PLATE)
                .input('r', Items.REDSTONE)
                .criterion(hasItem(Items.COPPER_INGOT), conditionsFromItem(Items.COPPER_INGOT))
                .criterion(hasItem(Items.STONE_PRESSURE_PLATE), conditionsFromItem(Items.STONE_PRESSURE_PLATE))
                .criterion(hasItem(Items.REDSTONE), conditionsFromItem(Items.REDSTONE))
                .offerTo(consumer, new Identifier(getRecipeName(Items.DETECTOR_RAIL)));

        ShapedRecipeJsonBuilder.create(RecipeCategory.MISC, RetooledItems.FLINT_SWORD, 1)
                .pattern(" f ")
                .pattern(" f ")
                .pattern(" | ")
                .input('f', Items.FLINT)
                .input('|', Items.STICK)
                .criterion(hasItem(Items.FLINT), conditionsFromItem(Items.FLINT))
                .criterion(hasItem(Items.STICK), conditionsFromItem(Items.STICK))
                .offerTo(consumer, new Identifier(getRecipeName(Items.WOODEN_SWORD)));

        ShapedRecipeJsonBuilder.create(RecipeCategory.MISC, RetooledItems.FLINT_AXE, 1)
                .pattern("ff ")
                .pattern("f| ")
                .pattern(" | ")
                .input('f', Items.FLINT)
                .input('|', Items.STICK)
                .criterion(hasItem(Items.FLINT), conditionsFromItem(Items.FLINT))
                .criterion(hasItem(Items.STICK), conditionsFromItem(Items.STICK))
                .offerTo(consumer, new Identifier(getRecipeName(Items.WOODEN_AXE)));

        ShapedRecipeJsonBuilder.create(RecipeCategory.MISC, RetooledItems.FLINT_PICKAXE, 1)
                .pattern("fff")
                .pattern(" | ")
                .pattern(" | ")
                .input('f', Items.FLINT)
                .input('|', Items.STICK)
                .criterion(hasItem(Items.FLINT), conditionsFromItem(Items.FLINT))
                .criterion(hasItem(Items.STICK), conditionsFromItem(Items.STICK))
                .offerTo(consumer, new Identifier(getRecipeName(Items.WOODEN_PICKAXE)));

        ShapedRecipeJsonBuilder.create(RecipeCategory.MISC, RetooledItems.FLINT_HOE, 1)
                .pattern("ff ")
                .pattern(" | ")
                .pattern(" | ")
                .input('f', Items.FLINT)
                .input('|', Items.STICK)
                .criterion(hasItem(Items.FLINT), conditionsFromItem(Items.FLINT))
                .criterion(hasItem(Items.STICK), conditionsFromItem(Items.STICK))
                .offerTo(consumer, new Identifier(getRecipeName(Items.WOODEN_HOE)));

        ShapedRecipeJsonBuilder.create(RecipeCategory.MISC, RetooledItems.FLINT_SHOVEL, 1)
                .pattern(" f ")
                .pattern(" | ")
                .pattern(" | ")
                .input('f', Items.FLINT)
                .input('|', Items.STICK)
                .criterion(hasItem(Items.FLINT), conditionsFromItem(Items.FLINT))
                .criterion(hasItem(Items.STICK), conditionsFromItem(Items.STICK))
                .offerTo(consumer, new Identifier(getRecipeName(Items.WOODEN_SHOVEL)));

        ShapedRecipeJsonBuilder.create(RecipeCategory.MISC, RetooledItems.COPPER_SWORD, 1)
                .pattern(" c ")
                .pattern(" c ")
                .pattern(" | ")
                .input('c', Items.COPPER_INGOT)
                .input('|', Items.STICK)
                .criterion(hasItem(Items.COPPER_INGOT), conditionsFromItem(Items.COPPER_INGOT))
                .criterion(hasItem(Items.STICK), conditionsFromItem(Items.STICK))
                .offerTo(consumer, new Identifier(getRecipeName(Items.STONE_SWORD)));

        ShapedRecipeJsonBuilder.create(RecipeCategory.MISC, RetooledItems.COPPER_AXE, 1)
                .pattern("cc ")
                .pattern("c| ")
                .pattern(" | ")
                .input('c', Items.COPPER_INGOT)
                .input('|', Items.STICK)
                .criterion(hasItem(Items.COPPER_INGOT), conditionsFromItem(Items.COPPER_INGOT))
                .criterion(hasItem(Items.STICK), conditionsFromItem(Items.STICK))
                .offerTo(consumer, new Identifier(getRecipeName(Items.STONE_AXE)));

        ShapedRecipeJsonBuilder.create(RecipeCategory.MISC, RetooledItems.COPPER_PICKAXE, 1)
                .pattern("ccc")
                .pattern(" | ")
                .pattern(" | ")
                .input('c', Items.COPPER_INGOT)
                .input('|', Items.STICK)
                .criterion(hasItem(Items.COPPER_INGOT), conditionsFromItem(Items.COPPER_INGOT))
                .criterion(hasItem(Items.STICK), conditionsFromItem(Items.STICK))
                .offerTo(consumer, new Identifier(getRecipeName(Items.STONE_PICKAXE)));

        ShapedRecipeJsonBuilder.create(RecipeCategory.MISC, RetooledItems.COPPER_SHOVEL, 1)
                .pattern(" c ")
                .pattern(" | ")
                .pattern(" | ")
                .input('c', Items.COPPER_INGOT)
                .input('|', Items.STICK)
                .criterion(hasItem(Items.COPPER_INGOT), conditionsFromItem(Items.COPPER_INGOT))
                .criterion(hasItem(Items.STICK), conditionsFromItem(Items.STICK))
                .offerTo(consumer, new Identifier(getRecipeName(Items.STONE_SHOVEL)));

        ShapedRecipeJsonBuilder.create(RecipeCategory.MISC, RetooledItems.COPPER_HOE, 1)
                .pattern("cc ")
                .pattern(" | ")
                .pattern(" | ")
                .input('c', Items.COPPER_INGOT)
                .input('|', Items.STICK)
                .criterion(hasItem(Items.COPPER_INGOT), conditionsFromItem(Items.COPPER_INGOT))
                .criterion(hasItem(Items.STICK), conditionsFromItem(Items.STICK))
                .offerTo(consumer, new Identifier(getRecipeName(Items.STONE_HOE)));

    }
}
